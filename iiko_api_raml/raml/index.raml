#%RAML 1.0
title: iikoBiz Server API
baseUri: https://iiko.biz:9900
version: v1
mediaType: application/json
protocols: [HTTP, HTTPS]

securitySchemes:
  digest:
    description: |
      This API supports DigestSecurityScheme Authentication rfc2617
    type: Digest Authentication

securedBy: [digest]


types:
  AccessKey:

/api/0:
  ####################################################################
  #
  # AUTH
  #
  ####################################################################
  /auth:
    /access_token:
      description: Получить маркер доступа апи логина
      get:
        securedBy: [null]
        queryParameters:
          user_id:
            type: string
            required: true
            description: Идентификатор клиента
          user_secret:
            type: string
            required: true
            description: Пароль клиента
        responses:
         200:
          description: Маркер доступа апи логина, используемый для авторизации в службах iikoBiz
          body:
           application/json:

    /echo:
      description: Проверка маркера доступа апи логина
      get:
        securedBy: [null]
        queryParameters:
          msg:
            type: string
            required: true
            description: Сообщение
          accessToken:
            type: string
            required: true
            description: Маркер доступа
        responses:
         200:
          description: Сообщение, или “Wrong access token”, если маркер доступа не прошел проверку.
          body:
           application/json:

    /biz_access_token:
      description: Получить маркер доступа пользователя biz
      get:
        securedBy: [null]
        queryParameters:
          user_ext_id:
            type: string
            required: true
            description: Внешний ключ для авторизации пользователя iiko.biz
        responses:
         200:
          description: Маркер доступа пользователя iiko.biz, используемый для авторизации в службах iikoBiz
          body:
           application/json:

  ####################################################################
  #
  # MOBILEIIKOCARD5
  #
  ####################################################################
  /mobileIikoCard5:
    /authenticatePhone:
      description: Аутентификация номера телефона гостя
      post:
        queryParameters: #todo format all this as AuthenticatePhoneRequest ?
          accessToken:
            type: string
            required: true
            description: Маркер доступа
          organizationId:
            type: string # todo Guid
            required: true
            description: Идентификатор организации
          phoneNumber:
            type: string
            required: true
            description: Номер телефона, по которому будет производиться поиск гостя
        responses: # todo AuthenticatePhoneResult
         200:
          description: Результат поиска
          body:
           application/json:

  ####################################################################
  #
  # CUSTOMERS
  #
  ####################################################################
  /customers:
    /get_customer_by_id:
      description: Получить данные гостя по его идентификатору
      get:
        queryParameters: #todo format all this as AuthenticatePhoneRequest ?
          accessToken:
            type: string
            required: true
            description: Маркер доступа
          organization: # todo bug - as is "organization" / expected "organizationId"
            type: string # todo Guid
            required: true
            description: Идентификатор организации
          id:
            type: string # todo Guid
            required: true
            description: Идентификатор гостя
        responses: # todo OrganizationGuestInfo
         200:
          description: Данные гостя (включая баланс)
          body:
           application/json:

  ####################################################################
  #
  # ORGANIZATION
  #
  ####################################################################
  /organization:
    /list:
      description: Получение списка организаций
      get:
        queryParameters:
          access_token:
            type: string
            required: true
            description: Маркер доступа
          requestTimeout:
            type: string # todo TimeSpan
            required: true
            description: Таймаут для выполнения запроса. Указывает на время обработки запроса на серверной стороне, не учитывая транспортные задержки.
        responses:
         200:
          description: Информация о организациях.
          body:
           application/json:
            type: object # todo OrganizationInfo[]
            #example: |
            #{
            #   { "organizationId":"1721531da-7ed5-4cf8-3ad1f-370031d2e6b1", “name”:”ArteFAQ”},
            #   { "organizationId":"1721531da-7ed5-4cf8-3ad1f-370031d2e6b2", “name”:”DeFAQto”}
            # }

      /{organizationId}:
        description: Получение информации о заданной организации
        get:
          queryParameters:
            access_token:
              type: string
              required: true
              description: Маркер доступа
            requestTimeout:
              type: string # todo TimeSpan
              required: true
              description: Таймаут для выполнения запроса. Указывает на время обработки запроса на серверной стороне, не учитывая транспортные задержки.
          responses:
           200:
            description: Информация о организациях.
            body:
             application/json:
              type: object # todo OrganizationInfo
              #example: |
              #  {
              #    "organizationId":"1721531da-7ed5-4cf8-3ad1f-370031d2e6b1", “name”:”ArteFAQ”,
              #    “description”:”Greate place to socialize and meet with ladies”,
              #    “location”:”Moscow-somewhere (ask google for geolocation and route)”
              #  }


      /{organizationId}/supportedProtocols:
        description: Получение списка протоколов заданной организции
        get:
          queryParameters:
            access_token:
              type: string
              required: true
              description: Маркер доступа
          responses:
           200:
            description: Информация о организациях.
            body:
             application/json:
              type: object # todo  OrganizationSupportedProtocols |  OrganizationSupportedProtocols[]


  ####################################################################
  #
  # RMS SETTINGS
  #
  ####################################################################
  /rmsSettings:
    /getRoles:
      description: Получение списка ролей организации
      get:
        queryParameters:
          access_token:
            type: string
            required: true
            description: Маркер доступа
          organizationId: # todo check organization || organizationId ?
            type: string # todo Guid
            required: true
            description: 	Идентификатор организации
        responses:
         200:
          description: Список всех ролей организации
          body:
           application/json:
            type: object # todo OrganizationRoleResponse

    /getEmployees:
      description: Получение списка сотрудников организации
      get:
        queryParameters:
          access_token:
            type: string
            required: true
            description: Маркер доступа
          organizationId: # todo check organization || organizationId ?
            type: string # todo Guid
            required: true
            description: 	Идентификатор организации
        responses:
         200:
          description: Список всех сотрудников организации
          body:
           application/json:
            type: object # todo OrganizationUserResponse

    /getRestaurantSections:
      description: Получение списка залов организации
      get:
        queryParameters:
          access_token:
            type: string
            required: true
            description: Маркер доступа
          organizationId: # todo check organization || organizationId ?
            type: string # todo Guid
            required: true
            description: 	Идентификатор организации
        responses:
         200:
          description: Список всех залов организации
          body:
           application/json:
            type: object # todo RestaurantSectionsResponse


    /getPaymentTypes:
        description: Cписок внешних типов оплат для заданного ресторана
        get:
          queryParameters:
            access_token:
              type: string
              required: true
              description: Маркер доступа
            organizationId: # todo check organization || organizationId ?
              type: string # todo Guid
              required: true
              description:  Идентификатор организации
          responses:
           200:
            description: Внешние типы оплат
            body:
             application/json:
              type: object # todo PaymentType

    /getMarketingSources:
      description: Запрос возвращает список всех маркетинговых источников для заданного ресторана
  ####################################################################
  #
  # DELIVERY SETTINGS
  #
  ####################################################################
  /deliverySettings:
    /getDeliveryTerminals:
      description: Вернуть список доставочных ресторанов, подключённых к данному ресторану
      get:
        queryParameters:
          access_token:
            type: string
            required: true
            description: Маркер доступа
          organizationId: # todo check organization || organizationId ?
            type: string # todo Guid
            required: true
            description:  Идентификатор организации
        responses:
         200:
          description: Маркетинговые источники
          body:
           application/json:
            type: object # todo MarketingSourceInfo
          organizationId: # todo check organization || organizationId ?
            type: string # todo Guid
            required: true
            description: 	Идентификатор организации
        responses:
         200:
          description: Список доставочных ресторанов, подключённых к данному ресторану
          body:
           application/json:
            type: object # todo DeliveryTerminal[]

  ####################################################################
  #
  # NOMENCLATURE
  #
  ####################################################################

  /nomenclature:
    /{organizationId}:
      description: Получить дерево номенклатуры
      get:
        queryParameters:
          access_token:
            type: string
            required: true
            description: Маркер доступа
          revision:
            type: integer
            required: false
            description: Ревизия
        responses:
         200:
          description: Один запрос возвращает информацию как о группах, так и о продуктах. Ревизия одна на все дерево продуктов. Метод возвращает полное дерево продуктов, если в нем были изменения, null, если переданная ревизия является актуальной.
          body:
           application/json:
            type: object # todo response

    /getOrderTypes:
      description: Получение списка допустимых типов заказов
      get:
        queryParameters:
          access_token:
            type: string
            required: true
            description: Маркер доступа
          organizationId: # todo check organization || organizationId ?
            type: string # todo Guid
            required: true
            description: 	Идентификатор организации
        responses:
         200:
          description: Справочник типов заказов
          body:
           application/json:
            type: object # todo OrderTypesResponse

    /stopLists:
      /getDeliveryStopList:
        description: Запрос возвращает список продуктов, находящихся в стоп-листе. В случае запроса на колл-центра в результате могут находяится позиции стоп-листа из других ресторанов.
        get:
          queryParameters:
            access_token:
              type: string
              required: true
              description: Маркер доступа
            organizationId: # todo check organization || organizationId ?
              type: string # todo Guid
              required: true
              description:  Идентификатор организации
          responses:
           200:
            description: Элементы стоп-листа
            body:
             application/json:
              type: object # todo StopListAtOrganization
####################################################################
#
# CITIES
#
####################################################################
  /cities:
    /cities:
      description: Метод возвращает список всех городов и улиц каждого из городов. Эти данные могут быть использовать для задания адреса доставки.
      get:
        queryParameters:
          access_token:
            type: string
            required: true
            description: Маркер доступа
          organizationId: # todo check organization || organizationId ?
            type: string # todo Guid
            required: true
            description:  Идентификатор организации
        responses:
         200:
          description: Города с улицами
          body:
           application/json:
            type: object # todo CityWithStreets

      /citiesList:
        description: Метод возвращает список всех городов заданной организации. Эти данные могут быть использовать для задания адреса доставки.
        get:
          queryParameters:
            access_token:
              type: string
              required: true
              description: Маркер доступа
            organizationId: # todo check organization || organizationId ?
              type: string # todo Guid
              required: true
              description:  Идентификатор организации
          responses:
           200:
            description: Города
            body:
             application/json:
              type: object # todo City

  /streets:
    /streets:
      description: Метод возвращает список всех городов заданной организации. Эти данные могут быть использовать для задания адреса доставки.
      get:
        queryParameters:
          access_token:
            type: string
            required: true
            description: Маркер доступа
          organizationId: # todo check organization || organizationId ?
            type: string # todo Guid
            required: true
            description:  Идентификатор организации
          cityId: # todo check city || cityId ?
            type: string
            required: true
            description: Идентификатор города
        responses:
         200:
          description: Улицы
          body:
           application/json:
            type: object # todo Street

  /regions:
    /regions:
      description: Метод возвращает список всех всех регионов, которые есть в справочнике регионов организации. Эти данные могут быть использовать для задания региона в адресе доставки.
      get:
        queryParameters:
          access_token:
            type: string
            required: true
            description: Маркер доступа
          organizationId: # todo check organization || organizationId ?
            type: string # todo Guid
            required: true
            description:  Идентификатор организации
        responses:
         200:
          description: Список регионов
          body:
           application/json:
            type: object # todo Region
####################################################################
#
# ORDERS
#
####################################################################
  /orders:
    /add:
      description: При создании заказа предполагается, что идентификатор задается клиентом. Если идентификатор корректен, то заказ создается с ним. Если идентификатор не корректен, то возвращается ошибка. Если идентификатор оставить не заданным, то он будет сгенерирован автоматически. Идентификатор пользователя позволяет выбрать уже зарегистрированного пользователя или создать нового. Если идентификатор не корректен, то возвращается ошибка. Для того чтобы улица подставилась в iikoRMS необходимо чтобы поле Address удовлетворяло одному из требований: Был указан идентификатор улицы (поле streetId) и в локальной базе существовала улица с заданным идентификатором. Было указано наименование улицы и города (заполнены поля street и city) и в локальной базе существовала улица с названием, совпадающий с значением поля street, которая принадлежит городу с названием, совпадающим со значением поля city. При использовании оплаты iikoCard5 в сочетании с iikoRMS версии 5.0+, в поле additionalData информации об оплате, требуется прописать следующую структуру: "{\"searchScope\": \"PHONE\", \"credential\": \"+7**********\"}" Где помимо PHONE может быть указано CARD_NUMBER, CARD_TRACK. В этом случае, вместо актуального номера должен быть указан номер либо трек карты пользователя.
      post:
        queryParameters:
          access_token:
            type: string
            required: true
            description: Маркер доступа
          orderRequest: # todo OrderRequest
            type: string 
            required: true
            description: Запрос на создание заказа
          requestTimeout: # todo check request_timeout || requestTimeout ?
            type: string 
            required: true
            description: Таймаут для выполнения запроса. Указывает на время обработки запроса на серверной стороне, не учитывая транспортные задержки.
        responses:
         200:
          description: Информация о заказе
          body:
           application/json:
            type: object # todo OrderInfo

    /info:
      description: Получение информации о предварительно созданном заказе.
      get:
        queryParameters:
          access_token:
            type: string
            required: true
            description: Маркер доступа
          organizationId: # todo check organization || organizationId ?
            type: string # todo Guid
            required: true
            description:  Идентификатор ресторана
          orderId: # todo check order || orderId ?
            type: string
            required: true
            description:  Идентификатор заказа
          requestTimeout: # todo check request_timeout || requestTimeout ?
            type: string 
            required: true
            description: Таймаут для выполнения запроса. Указывает на время обработки запроса на серверной стороне, не учитывая транспортные задержки.
        responses:
         200:
          description: Информация о заказе
          body:
           application/json:
            type: object # todo OrderInfo

    /checkCreate:
      description: Определяет, подходит доставка к обработке или нет.
      post:
        queryParameters:
          access_token:
            type: string
            required: true
            description: Маркер доступа
          orderRequest: # todo OrderRequest
            type: string
            required: true
            description:  Запрос на создание заказа
          requestTimeout: # todo check request_timeout || requestTimeout ?
            type: string 
            required: true
            description: Таймаут для выполнения запроса. Указывает на время обработки запроса на серверной стороне, не учитывая транспортные задержки.
        responses:
         200:
          description: Результат проверки возможности создания доставки
          body:
           application/json:
            type: object # todo OrderCheckCreationResult

    /checkAddress:
      description: Определяет, возможно ли осуществить доставку по указанному адресу.
      post:
        queryParameters:
          access_token:
            type: string
            required: true
            description: Маркер доступа
          organizationId: # todo check organization || organizationId ?
            type: string # todo Guid
            required: true
            description:  Идентификатор организации
          requestTimeout: # todo check request_timeout || requestTimeout ?
            type: string 
            required: true
            description: Таймаут для выполнения запроса. Указывает на время обработки запроса на серверной стороне, не учитывая транспортные задержки.
        responses:
         200:
          description: Результат проверки возможности осуществления доставки по указанному адресу
          body:
           application/json:
            type: object # todo AddressCheckResult

    /deliveryOrders:
      description: Получение информации о всех доставках в заданном временном интервале.
      get:
        queryParameters:
          access_token:
            type: string
            required: true
            description: Маркер доступа
          organizationId: # todo check organization || organizationId ?
            type: string
            required: true
            description:  Идентификатор ресторана
          dateFrom:
            type: date
            required: true
            description:  Дата начала интервала (включительно)
          dateTo:
            type: date
            required: true
            description:  Дата окончания интервала (включительно)
          deliveryStatus: # todo check deliveryStatus || deliveryStatus ?
            type: string
            required: true
            description: Статус доставки (регистронезависимый). Должно принимать одно из следующих значений:
                          NEW
                          WAITING
                          ON_WAY
                          CLOSED
                          CANCELLED
                          DELIVERED
                          UNCONFIRMED
          deliveryTerminalId: # todo check deliveryTerminalId || deliveryTerminalId ?
            type: string
            required: true
            description:  Идентификатор терминала доставки
          requestTimeout: # todo check request_timeout || requestTimeout ?
            type: string 
            required: true
            description: Таймаут для выполнения запроса. Указывает на время обработки запроса на серверной стороне, не учитывая транспортные задержки.
        responses:
         200:
          description: Информация о заказах
          body:
           application/json:
            type: object # todo DeliveryOrderInfo

    /deliveryHistory:
      description: Получение информации о доставочных заказах, которые клиент делал в заданном ресторане.
      get:
        queryParameters:
          access_token:
            type: string
            required: true
            description: Маркер доступа
          organizationId: # todo check organization || organizationId ?
            type: string
            required: true
            description:  Идентификатор ресторана
          customerId: # todo check customer || customerId ?
            type: date
            required: true
            description:  Идентификатор клиента
          requestTimeout: # todo check request_timeout || requestTimeout ?
            type: string 
            required: true
            description: Таймаут для выполнения запроса. Указывает на время обработки запроса на серверной стороне, не учитывая транспортные задержки.
        responses:
         200:
          description: Информация о заказах
          body:
           application/json:
            type: object # todo DeliveryHistoryOrderInfo

    /get_courier_orders:
      description: Получить все заказы курьера
      get:
        queryParameters:
          access_token:
            type: string
            required: true
            description: Маркер доступа
          organizationId: # todo check organization || organizationId ?
            type: string # todo Guid
            required: true
            description:  Идентификатор ресторана
          courierId: # todo check courier || courierId ?
            type: string # todo Guid
            required: true
            description:  Идентификатор курьера
          requestTimeout: # todo check request_timeout || requestTimeout ?
            type: string 
            required: true
            description: Таймаут для выполнения запроса. Указывает на время обработки запроса на серверной стороне, не учитывая транспортные задержки.
        responses:
         200:
          description: Информация о заказах
          body:
           application/json:
            type: object # todo DeliveryOrderInfo
####################################################################
#
# APPLICATION MARKET
#
####################################################################
/applicationMarket:
  /userInfo:
    description: Получить информацию о заданном пользователе biz, доступную для заданного апи логина
    get:
      queryParameters:
        api_access_token:
          type: string
          required: true
          description: Маркер доступа апи логина
        bizAccessToken:
          type: string
          required: true
          description: Маркер доступа пользователя biz
      responses:
       200:
        description: Информация о пользователе biz из bizAccessToken, организациях, в которые он входит и которые могут работать с апи логином из apiAccessToken
        body:
         application/json:
         # todo type: UserInfo
